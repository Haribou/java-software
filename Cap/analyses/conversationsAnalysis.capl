# A simple realtime conversational analysis for all conversations in a time window, plus histograms for conversation numbers and trouble scores for all of history.

settings:

debug: false,
recording: false,
expires: 30 * 24 * 60;

constants:

MAX_NUM_TIME_WINDOWS:  90 * 24,
WINDOW_LENGTH_MINUTES: 2,
WINDOW_LENGTH_MS: WINDOW_LENGTH_MINUTES * 60000,
TROUBLE_SCORE_HISTO_BUCKET_WIDTH: 0.1,
TROUBLE_SCORE_HISTO_BUCKETS: 1 // TROUBLE_SCORE_HISTO_BUCKET_WIDTH,
WEBHOOK_URL1: "https://webhook.site/480e854f-5175-4307-8f5f-bb90c465f37d";
# WEBHOOK_URL2: "https://prod-184.westus.logic.azure.com:443/workflows/c4739ff4e2c148c080212b5d31c548e2/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I2UM5hfE5XOGAj752Ul_35fj-hHR_B6k1Lz2NgyB9SM";

variables:

troubleScoresInTimeWindow: list{ WINDOW_LENGTH_MINUTES },
conversationsInTimeWindow: set{ WINDOW_LENGTH_MINUTES },
pastAvgTroubleScores: list[ MAX_NUM_TIME_WINDOWS ],
pastMaxTroubleScores: list[ MAX_NUM_TIME_WINDOWS ],
pastStdDevTroubleScores: list[ MAX_NUM_TIME_WINDOWS ],
pastNumConversations: list[ MAX_NUM_TIME_WINDOWS ],
postPayload: map[]("label": "conversationsAnalysis", "vaId": @["analysis"]["vaId"], "label": "Trouble Score Live Tracker"),
firstTimestamp: now,
previousTimeWindow: now numberToTimeWindow(firstTimestamp, WINDOW_LENGTH_MS),
timeWindow: 0;

updateRules:

:
	timeWindow:
		now numberToTimeWindow(firstTimestamp, WINDOW_LENGTH_MS),
		
:
	:
		conversationsInTimeWindow add(@["analysis"]["sessionId"]) \
	:
		troubleScoresInTimeWindow add(@["analysis"]["troubleScore"]),
		
previousTimeWindow < timeWindow:
	:
		pastAvgTroubleScores add(troubleScoresInTimeWindow avg) \
	:
		pastMaxTroubleScores add(troubleScoresInTimeWindow max) \
	:
		pastStdDevTroubleScores add(troubleScoresInTimeWindow stdDev) \
	:
		pastNumConversations add(conversationsInTimeWindow count),
		
:
	:
		postPayload add("timestamp": now,
						"avgTroubleScore": troubleScoresInTimeWindow avg,
						"pastAvgTroubleScores": pastAvgTroubleScores,
						"maxTroubleScore": troubleScoresInTimeWindow max, 
						"pastMaxTroubleScores": pastMaxTroubleScores,
						"stdDevTroubleScores": troubleScoresInTimeWindow stdDev,
						"pastStdDevTroubleScores": pastStdDevTroubleScores,
						"numConversations": conversationsInTimeWindow count,
						"pastNumConversations": pastNumConversations,
						"troubleScoresHistogram": troubleScoresInTimeWindow histo(0, TROUBLE_SCORE_HISTO_BUCKETS, TROUBLE_SCORE_HISTO_BUCKET_WIDTH)),
						
:
	timeWindow:
		previousTimeWindow;
						
outputRules:

:
	:								
		post(WEBHOOK_URL1, "", postPayload);
		# post(WEBHOOK_URL2, "", postPayload);