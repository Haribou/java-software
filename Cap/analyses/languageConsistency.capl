# 
# Measures the "consistency" of languages in which customers tweet, i.e., based on Twitter's language recognition tags, how many languages does the average customer tweet in?
# We also constrain the tweets under consideration, and we compare the customer's language with the business response language to discover discrepancies.
# How often does the language of a tweet from user X differ from that of tweets that X retweets?
#

settings: 			

debug:																									false,
recording:																								false;
		
constants:		
		
MIN_TWEET_LENGTH:																						_@minTweetLength@_,
												
BUSINESSES:																								set("united", "AmericanAir", "JetBlue", "Delta", "Southwest"),
		
WINDOW_SIZE: 																							100000,
OUTPUT_AT:																								_@totalNumEvents@_;

variables:

retweet: 																								false,
fromBusiness:																							false,
eligibleFromCustomer:																					false,
twittererLanguages: 																					map,
tweetLanguages:																							map,
tweetLengths:																							map,
trackLanguage:																							false,
hasExtendedText:																						false,
tweet:																									"",
numEligibleTweets:																						0,
userId:																									"",
tweeters2Languages:																						set,
eligibleBusinessResponse:																				false,
numEligibleBusinessResponses:																			0,
hasDiscrepancies:																						false,
numDiscrepancies:																						0,
customerTweetLengths:																					0,
businessResponseLengths:																				0;
	
updateRules:	
	
retweet::	 																							@["retweeted_status"] exists,
hasExtendedText:: 																						!retweet & @["extended_tweet"] exists,
tweet: 							hasExtendedText: 														@["extended_tweet"]["full_text"],
tweet: 							!retweet & !hasExtendedText: 											@["text"],
fromBusiness::																							BUSINESSES contains(@["user"]["screen_name"]),
eligibleFromCustomer::																					!retweet & !fromBusiness & tweet count > MIN_TWEET_LENGTH,
trackLanguage::  																						eligibleFromCustomer & @["lang"] notNull,
numEligibleTweets:				trackLanguage:															numEligibleTweets + 1,
:								trackLanguage:															tweetLengths add(@["id_str"]: tweet count),
userId:							trackLanguage:															@["user"]["id_str"],
:								trackLanguage & !twittererLanguages containsKeys(userId): 				twittererLanguages add(userId: set(@["lang"])),
:								trackLanguage & twittererLanguages containsKeys(userId): 				twittererLanguages[userId] add(@["lang"]),
:								trackLanguage & twittererLanguages containsKeys(userId) & 	
								twittererLanguages[userId] count > 1: 									tweeters2Languages add(userId),
:								trackLanguage:															tweetLanguages add(@["id_str"]: @["lang"]),
eligibleBusinessResponse::																				!retweet & fromBusiness & @["in_reply_to_status_id_str"] notNull & tweetLanguages containsKeys(@["in_reply_to_status_id_str"]),
numEligibleBusinessResponses: 	eligibleBusinessResponse:												numEligibleBusinessResponses + 1,
hasDiscrepancies::																						eligibleBusinessResponse & tweetLanguages[@["in_reply_to_status_id_str"]] ~ @["lang"],
numDiscrepancies:				hasDiscrepancies:														numDiscrepancies + 1,
customerTweetLengths:			hasDiscrepancies:														customerTweetLengths + tweetLengths[@["in_reply_to_status_id_str"]],
businessResponseLengths:		hasDiscrepancies:														businessResponseLengths + tweet count;

outputRules:

numTweets:						numEvents = OUTPUT_AT:													numEligibleTweets,
numTweeters:					numEvents = OUTPUT_AT:													twittererLanguages countKeys,
numTweeters2Languages:			numEvents = OUTPUT_AT:													tweeters2Languages count,
pctTweeters2Languages:			numEvents = OUTPUT_AT & twittererLanguages countKeys > 0:				100 * (tweeters2Languages count / twittererLanguages countKeys) + "%",
avgNumUsedLangs:				numEvents = OUTPUT_AT:													twittererLanguages avg,
numBusinessResponses: 			numEvents = OUTPUT_AT:													numEligibleBusinessResponses,
pctBusinessResponses:			numEvents = OUTPUT_AT & numEligibleTweets > 0:							100 * (numEligibleBusinessResponses / numEligibleTweets) + "%",
pctLanguageDiscrepancies: 		numEvents = OUTPUT_AT & numEligibleBusinessResponses > 0:				100 * numDiscrepancies / numEligibleBusinessResponses + "%",
avgDiscrepancyTweetLength:		numEvents = OUTPUT_AT & numDiscrepancies > 0:							customerTweetLengths / numDiscrepancies,
avgDiscrepancyResponseLength:	numEvents = OUTPUT_AT & numDiscrepancies > 0:							businessResponseLengths / numDiscrepancies;